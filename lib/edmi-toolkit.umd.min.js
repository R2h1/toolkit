/*!
 * edmi-toolkit v1.0.10
 * (c) 2023-2023 
 * Released under the MIT License.
 */
!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((n="undefined"!=typeof globalThis?globalThis:n||self)["edmi-toolkit"]={})}(this,(function(n){"use strict";var r=function(){return r=Object.assign||function(n){for(var r,t=1,e=arguments.length;t<e;t++)for(var o in r=arguments[t])Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o]);return n},r.apply(this,arguments)};function t(n,r,t){if(t||2===arguments.length)for(var e,o=0,u=r.length;o<u;o++)!e&&o in r||(e||(e=Array.prototype.slice.call(r,0,o)),e[o]=r[o]);return n.concat(e||Array.prototype.slice.call(r))}n.accumulate=function(n){return n.reduce((function(n,r,e){return 0===e?[r]:t(t([],n,!0),[n[e-1]+r],!1)}),[])},n.castArray=function(n){return Array.isArray(n)?n:[n]},n.clone=function(n){return t([],n,!0)},n.countOccurrences=function(n){var r=new Map;return n.reduce((function(n,r){return n.has(r)?n.set(r,n.get(r)+1):n.set(r,1),n}),r)},n.countVal=function(n,r){return n.filter((function(n){return n===r})).length},n.empty=function(n){return n.length=0,n},n.isEmpty=function(n){return!!Array.isArray(n)&&0===n.length},n.isEqual=function(n,r,t){return void 0===t&&(t=!1),t||(n=Array.from(new Set(n)),r=Array.from(new Set(r))),JSON.stringify(n)===JSON.stringify(r)},n.range=function(n,r,t){return void 0===t&&(t=1),Array.from({length:Math.ceil((r-n)/t)},(function(r,e){return n+e*t}))},n.toNumbers=function(n){return n.map(Number)},n.toObject=function(n,t){return n.reduce((function(n,e){var o;return r(r({},n),((o={})[e[t]]=e,o))}))},Object.defineProperty(n,"__esModule",{value:!0})}));
